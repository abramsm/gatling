#if($!{package})package ${package}#end

import com.excilys.ebi.gatling.core.Predef._
import com.excilys.ebi.gatling.http.Predef._
import com.excilys.ebi.gatling.app.Simulation

class Simulation${date} extends Simulation {

def apply ={
	val urlBase = "${protocol}://${host}#if(${port} != -1):${port}#end"

	val httpConf = httpConfig.baseURL(urlBase)#if(${proxy.getPort()} != 0).proxy("${proxy.getHost()}", ${proxy.getPort()})#if(${proxy.getSslPort()} != 0).httpsPort(${proxy.getSslPort()})#end#if($!{proxy.getUsername()}).credentials("${proxy.getUsername()}", "${proxy.getPassword()}")#end#end

#foreach(${url} in ${urls.entrySet()})
	val ${url.getKey()} = "${url.getValue()}"
#end

#foreach (${h} in ${headers.entrySet()})
#* Velocity can't unset a variable from the context, so we pre-defined the variable to false *#
#set($otherHeaders = false)
#set($otherHeaders = ${h.getValue().remove("headers")})
	val ${h.getKey()} =#if($otherHeaders) $otherHeaders ++#end Map(
#foreach (${header} in ${h.value.entrySet()})
		"${header.getKey()}" -> """${header.getValue()}"""#if(${foreach.hasNext}),
#else

	)
#end
#end
#* We set again the otherHeaders, if we have to dump scala version for the scenario *#
#set($otherHeaders = ${h.getValue().put("headers", $otherHeaders)})
#end

#if(!${chainEvents.isEmpty()})
	#set($chain_number = 0)
	#foreach(${chain} in ${chainEvents})
	val chain_${chain_number} = chain
	#foreach(${event} in ${chain})
#parse("event.vm")
	#end
	#set($chain_number = $chain_number + 1)
	
	#end
	
	val scn = scenario("${name}")
		#set($chain_number = 0)
		#foreach(${chain} in ${chainEvents})
			.insertChain( chain_${chain_number} )
			#set($chain_number = $chain_number + 1)
		#end
#else

	val scn = scenario("${name}")
#foreach(${event} in ${events})
	#parse("event.vm")
#end

#end

	runSimulation(
		scn.configure users 1 protocolConfig httpConf
	)
}
}